{
  "name": "Monty Hall Problem",
  "description": "See https://en.wikipedia.org/wiki/Monty_Hall_problem",
  "declarations": "random carDoor : 1..3;\nrandom doorOpenedByHost : 1..3;\nrandom doorToSwitchTo : 1..3;",
  "rules": [
    {
      "metadata": "What should go here...",
      "rule": "// P(initiallyChosenDoor) is uniform,\n// so the next statement is actually unnecessary, but is written down to make it clear.\n\nif initiallyChosenDoor = 1 then 1/3 else if initiallyChosenDoor = 2 then 1/3 else if initiallyChosenDoor = 3 then 1/3 else 0;"
    },
    {
      "metadata": "What should go here...",
      "rule": "// P(doorOpenedByHost | initiallyChosenDoor)\ndoorOpenedByHost != initiallyChosenDoor;\ndoorOpenedByHost != carDoor;\nif initiallyChosenDoor = carDoor then 0.5 else 1; // probability of each value of doorOpenedByHost is 0.5 if there are two possible choices, 1 otherwise.\n"
    },
    {
      "metadata": "whatever...",
      "rule": "// P(doorToSwitchTo | initiallyChosenDoor, doorOpenedByHost)\n// Similar to previous one, but we can use the declarative abbreviated version because of determinism (there is always only one choice).\ndoorToSwitchTo != initiallyChosenDoor;\ndoorToSwitchTo != doorOpenedByHost;"
    }

  ],
  "queries": [
    "doorToSwitchTo = carDoor",
    "initiallyChosenDoor = carDoor"
  ]
}
